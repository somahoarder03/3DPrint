name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ruff
        run: |
          echo "Installing ruff..."
          pip install ruff
          echo "Ruff Installed."

      - name: Lint code using Ruff
        run: |
          echo "Running ruff..."
          ruff check . --ignore E501

      - name: Install Python dependencies for app
        run: pip install -r requirements.txt

      - name: Sanity Check before Pushing
        run: python detect.py --test

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm/v7
          push: false
          tags: ${{ secrets.DOCKER_USERNAME }}/print3d:test
          load: true

  deploy:
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image (final image)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm/v7
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/print3d:latest

      - name: Deploy to Raspberry Pi via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting Deployment on Raspberry Pi..."
           
            echo "Pulling latest Docker image: ${{ secrets.DOCKER_USERNAME }}/print3d:latest"
            docker pull ${{ secrets.DOCKER_USERNAME }}/print3d:latest
    
            echo "Stopping and removing old container (if exists)..."
            docker stop yolo-app || true
            docker rm yolo-app || true
    
            echo "Running new container 'yolo-app'..."
            docker run -d \
              --name yolo-app \
              --restart always \
              --privileged \
              --network host \
              -v /home/${{ secrets.PI_USER }}/yolo_data:/app/data \
              ${{ secrets.DOCKER_USERNAME }}/print3d:latest
      
            echo "Deployment complete!"